{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 18,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-12T14:22:43.045Z",
    "end": "2022-09-12T14:23:36.088Z",
    "duration": 14262,
    "testsRegistered": 19,
    "passPercent": 94.73684210526316,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fccadbda-4738-4ba5-96c1-6b84f7b0d49c",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18a6a1a9-8b6e-41e1-aebc-c527e5ed90c3",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 707,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "9d1946ca-0512-43ec-9c5c-b7d468db5147",
              "parentUUID": "18a6a1a9-8b6e-41e1-aebc-c527e5ed90c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem sucesso",
              "timedOut": null,
              "duration": 766,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarUsuarioFalso().then(res => {\n  cy.contractValidation(res, '1.login', 400);\n  _validaServerest.default.validarLoginSemSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validarLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:400:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:196:32)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "324c70ac-9a28-47f0-89d7-b1e7b291ee54",
              "parentUUID": "18a6a1a9-8b6e-41e1-aebc-c527e5ed90c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d1946ca-0512-43ec-9c5c-b7d468db5147"
          ],
          "failures": [
            "324c70ac-9a28-47f0-89d7-b1e7b291ee54"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1473,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "53edcd21-e541-4670-86b6-f1b2c6c25204",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b42fc726-4b9b-411d-baf9-367b3973d48d",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "b46ac8db-4532-4d88-aaaf-b05e4e8326ae",
              "parentUUID": "b42fc726-4b9b-411d-baf9-367b3973d48d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2431e59d-21c3-4bc6-a9c2-0ad06d8bff4a",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 838,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "2f4cdffb-35e9-4e4e-9572-8dcbbe8399e3",
                  "parentUUID": "2431e59d-21c3-4bc6-a9c2-0ad06d8bff4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve alterar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve alterar um produto com sucesso",
                  "timedOut": null,
                  "duration": 837,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.alterarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '11.put-produtos-by-id', 200);\n  _validaServerest.default.validarAlteracaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "907fb33f-7642-435c-ba1e-5daef8def942",
                  "parentUUID": "2431e59d-21c3-4bc6-a9c2-0ad06d8bff4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 842,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '10.delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "71878fc7-9f31-4657-8490-1d18f945e046",
                  "parentUUID": "2431e59d-21c3-4bc6-a9c2-0ad06d8bff4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f4cdffb-35e9-4e4e-9572-8dcbbe8399e3",
                "907fb33f-7642-435c-ba1e-5daef8def942",
                "71878fc7-9f31-4657-8490-1d18f945e046"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2517,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b46ac8db-4532-4d88-aaaf-b05e4e8326ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 448,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d0cc365-af90-4abf-9553-1cb79f2280f1",
      "title": "",
      "fullFile": "cypress/integration/4.carrinhos.spec.js",
      "file": "cypress/integration/4.carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "200fca94-87c9-4fb5-b5c0-ee5d7485bb29",
          "title": "Casos de teste sobre a rota /carrinhos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "36c78549-242e-4619-880e-fd7dde88fbec",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve adicionar um produto ao carrinho",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve adicionar um produto ao carrinho",
                  "timedOut": null,
                  "duration": 1197,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho();\ncy.get('@produtoCarrinho').then(produto => {\n  _serverest.default.adicionarProdutoAoCarrinho(produto).then(res => {\n    cy.contractValidation(res, '14.post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinhoComSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "e83aed92-8173-4993-a027-8eb6079471bc",
                  "parentUUID": "36c78549-242e-4619-880e-fd7dde88fbec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve buscar carrinho cadastrado",
                  "timedOut": null,
                  "duration": 851,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinho().then(res => {\n  cy.contractValidation(res, '12.get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinho(res);\n});",
                  "err": {},
                  "uuid": "1313e549-b7b3-49c5-8ee0-5bad079ff11d",
                  "parentUUID": "36c78549-242e-4619-880e-fd7dde88fbec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir um carrinho ao concluir compra",
                  "fullTitle": "Casos de teste sobre a rota /carrinhos da API Serverest Logar com sucesso Deve excluir um carrinho ao concluir compra",
                  "timedOut": null,
                  "duration": 917,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, '15.delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarExclusaoDeCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "94b6aebb-d7bc-4232-ad4f-3755f09c930c",
                  "parentUUID": "36c78549-242e-4619-880e-fd7dde88fbec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e83aed92-8173-4993-a027-8eb6079471bc",
                "1313e549-b7b3-49c5-8ee0-5bad079ff11d",
                "94b6aebb-d7bc-4232-ad4f-3755f09c930c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2965,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "32d93167-03f7-4fbd-bbdd-4201dce05415",
      "title": "",
      "fullFile": "cypress/integration/5.fluxoDeCompra.spec.js",
      "file": "cypress/integration/5.fluxoDeCompra.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df9f82fe-9c81-4106-a8d5-2092b8cd4a45",
          "title": "Casos de teste sobre o fluxo de compra da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve postar um novo usuario com sucesso",
              "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Deve postar um novo usuario com sucesso",
              "timedOut": null,
              "duration": 454,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarUsuarioValido().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "9680d343-192e-4a37-9d32-918ad406bf9a",
              "parentUUID": "df9f82fe-9c81-4106-a8d5-2092b8cd4a45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cebb3da6-46d6-4335-be96-327f1622d184",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve buscar todos os produtos cadastrados",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve buscar todos os produtos cadastrados",
                  "timedOut": null,
                  "duration": 847,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
                  "err": {},
                  "uuid": "9544a977-ea37-4830-a166-5e2bec6c46d9",
                  "parentUUID": "cebb3da6-46d6-4335-be96-327f1622d184",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve adicionar um produto ao carrinho",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve adicionar um produto ao carrinho",
                  "timedOut": null,
                  "duration": 1141,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho();\ncy.get('@produtoCarrinho').then(produto => {\n  _serverest.default.adicionarProdutoAoCarrinho(produto).then(res => {\n    cy.contractValidation(res, '14.post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinhoComSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "4dfdec25-3a55-4d05-9496-2f52daded994",
                  "parentUUID": "cebb3da6-46d6-4335-be96-327f1622d184",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho cadastrado",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve buscar carrinho cadastrado",
                  "timedOut": null,
                  "duration": 844,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinho().then(res => {\n  cy.contractValidation(res, '12.get-carrinhos', 200);\n  _validaServerest.default.validarBuscaDeCarrinho(res);\n});",
                  "err": {},
                  "uuid": "f35e2dbe-6f96-424b-801e-f7032af5ae88",
                  "parentUUID": "cebb3da6-46d6-4335-be96-327f1622d184",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir um carrinho ao concluir compra",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve excluir um carrinho ao concluir compra",
                  "timedOut": null,
                  "duration": 796,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, '15.delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarExclusaoDeCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "37b5872e-5612-4a26-9431-b6242bb99ade",
                  "parentUUID": "cebb3da6-46d6-4335-be96-327f1622d184",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9544a977-ea37-4830-a166-5e2bec6c46d9",
                "4dfdec25-3a55-4d05-9496-2f52daded994",
                "f35e2dbe-6f96-424b-801e-f7032af5ae88",
                "37b5872e-5612-4a26-9431-b6242bb99ade"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3628,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "9680d343-192e-4a37-9d32-918ad406bf9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 454,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5c654b9b-5557-4c9a-ac0d-fa2849073c0d",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 1083,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, '2.get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "d7853090-3ede-4ae6-a486-15de4a9b7aaf",
              "parentUUID": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário admnistrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário admnistrador existente",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 400);\n  expect(res.status).to.equal(400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "2a11a320-7dff-4ddb-bc25-ee7476519375",
              "parentUUID": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 620,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "5e74cd9e-1357-4fe1-8275-289b965e2a1d",
              "parentUUID": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let limite = res.body.quantidade - 1;\n  cy.log(limite);\n  let inteiro = _factory.default.gerarInteiroAleatorio(limite);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "95cef619-14ae-4b54-b5fc-e80edc5e1e0c",
              "parentUUID": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuario de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuario de um arquivo json",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "2db94266-af0a-42a5-9b2a-dcee55c7682e",
              "parentUUID": "f2c29798-ae43-49fe-bca6-8e41ed35f6dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7853090-3ede-4ae6-a486-15de4a9b7aaf",
            "2a11a320-7dff-4ddb-bc25-ee7476519375",
            "5e74cd9e-1357-4fe1-8275-289b965e2a1d",
            "95cef619-14ae-4b54-b5fc-e80edc5e1e0c",
            "2db94266-af0a-42a5-9b2a-dcee55c7682e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}