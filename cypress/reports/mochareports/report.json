{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 14,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-12T02:54:36.883Z",
    "end": "2022-09-12T02:55:23.828Z",
    "duration": 10473,
    "testsRegistered": 15,
    "passPercent": 93.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b9e9b3f4-2428-419d-8521-2be0850f1b98",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b72a905-1986-4c40-b7b2-04bae88feec8",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "7271089d-16d8-47ed-995d-3df47f6d6774",
              "parentUUID": "5b72a905-1986-4c40-b7b2-04bae88feec8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem sucesso",
              "timedOut": null,
              "duration": 709,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarUsuarioFalso().then(res => {\n  cy.contractValidation(res, '1.login', 400);\n  _validaServerest.default.validarLoginSemSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validarLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:396:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:196:32)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "35611cb3-0a06-4181-a4c3-d2025781eb8e",
              "parentUUID": "5b72a905-1986-4c40-b7b2-04bae88feec8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7271089d-16d8-47ed-995d-3df47f6d6774"
          ],
          "failures": [
            "35611cb3-0a06-4181-a4c3-d2025781eb8e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1376,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f5796f80-4fa8-4799-ad8d-6054725424b8",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aeb72b8c-9bbc-4cac-96fd-520c587973d4",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 661,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "a6cd9df0-384c-4590-bfdd-4aea526c8b79",
              "parentUUID": "aeb72b8c-9bbc-4cac-96fd-520c587973d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d3fd74e9-4643-4c44-9d01-d6c8b33b08a7",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 1047,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "43a309c9-ccea-42ca-a7ef-23584227f19c",
                  "parentUUID": "d3fd74e9-4643-4c44-9d01-d6c8b33b08a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve alterar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve alterar um produto com sucesso",
                  "timedOut": null,
                  "duration": 841,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.alterarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '11.put-produtos-by-id', 200);\n  _validaServerest.default.validarAlteracaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "9d683c4f-d37b-4299-844a-65ffefe22b8b",
                  "parentUUID": "d3fd74e9-4643-4c44-9d01-d6c8b33b08a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 759,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '10.delete-produtos-by-id', 200);\n  _validaServerest.default.validarExclusaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "cede3798-c029-49cf-97f2-282c81e8698c",
                  "parentUUID": "d3fd74e9-4643-4c44-9d01-d6c8b33b08a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43a309c9-ccea-42ca-a7ef-23584227f19c",
                "9d683c4f-d37b-4299-844a-65ffefe22b8b",
                "cede3798-c029-49cf-97f2-282c81e8698c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2647,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "a6cd9df0-384c-4590-bfdd-4aea526c8b79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 661,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5b5b1cc2-4c2f-4d39-950c-a39b214a3bb3",
      "title": "",
      "fullFile": "cypress/integration/5.fluxoDeCompra.spec.js",
      "file": "cypress/integration/5.fluxoDeCompra.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "466d3385-1122-4234-9dd6-179ca60a70f9",
          "title": "Casos de teste sobre o fluxo de compra da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve postar um novo usuario com sucesso",
              "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Deve postar um novo usuario com sucesso",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.postarUsuarioValido().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeUsuarioComSucesso(res);\n});",
              "err": {},
              "uuid": "f034b754-733c-4d4e-9265-16e3834a5ac5",
              "parentUUID": "466d3385-1122-4234-9dd6-179ca60a70f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "331d6f77-9e60-428a-8792-f11e883fb42b",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve buscar todos os produtos cadastrados",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve buscar todos os produtos cadastrados",
                  "timedOut": null,
                  "duration": 968,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(res => {\n  cy.contractValidation(res, '7.get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
                  "err": {},
                  "uuid": "4f8b605d-bd8c-49f0-be3a-25365b779206",
                  "parentUUID": "331d6f77-9e60-428a-8792-f11e883fb42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve adicionar um produto ao carrinho",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve adicionar um produto ao carrinho",
                  "timedOut": null,
                  "duration": 1169,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoParaCarrinho();\ncy.get('@produtoCarrinho').then(produto => {\n  console.log(cy.get('@produtoCarrinho'));\n  _serverest.default.adicionarProdutoAoCarrinho(produto).then(res => {\n    cy.contractValidation(res, '14.post-carrinhos', 201);\n    _validaServerest.default.validarCadastroDeCarrinhoComSucesso(res);\n  });\n});",
                  "err": {},
                  "uuid": "6d019bdc-fc8d-4606-94a8-bed669a2e06c",
                  "parentUUID": "331d6f77-9e60-428a-8792-f11e883fb42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve excluir um carrinho ao concluir compra",
                  "fullTitle": "Casos de teste sobre o fluxo de compra da API Serverest Logar com sucesso Deve excluir um carrinho ao concluir compra",
                  "timedOut": null,
                  "duration": 836,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(res => {\n  cy.contractValidation(res, '15.delete-carrinhos-concluir-compra', 200);\n  _validaServerest.default.validarExclusaoDeCarrinhoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "21172214-3680-46fc-858a-c8ed671268f4",
                  "parentUUID": "331d6f77-9e60-428a-8792-f11e883fb42b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f8b605d-bd8c-49f0-be3a-25365b779206",
                "6d019bdc-fc8d-4606-94a8-bed669a2e06c",
                "21172214-3680-46fc-858a-c8ed671268f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2973,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "f034b754-733c-4d4e-9265-16e3834a5ac5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 435,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6b2baba2-8adc-42ea-8e85-e58df3499953",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 866,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, '2.get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "09411ed2-1282-489f-9ecf-1c8ad930a7ad",
              "parentUUID": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário admnistrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário admnistrador existente",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 400);\n  expect(res.status).to.equal(400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "ee44e19c-3ce6-482a-971a-27745ff823ae",
              "parentUUID": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 567,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "91f5e515-b372-450c-b0a5-e4cf1f360e71",
              "parentUUID": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let limite = res.body.quantidade - 1;\n  cy.log(limite);\n  let inteiro = _factory.default.gerarInteiroAleatorio(limite);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "47f7d4e8-99fc-4497-a1b5-8e9072df760b",
              "parentUUID": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuario de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuario de um arquivo json",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "86004125-ae0a-448f-a69b-3a16b961544c",
              "parentUUID": "2698dc50-bab8-4742-a05c-dd1afd40c5e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09411ed2-1282-489f-9ecf-1c8ad930a7ad",
            "ee44e19c-3ce6-482a-971a-27745ff823ae",
            "91f5e515-b372-450c-b0a5-e4cf1f360e71",
            "47f7d4e8-99fc-4497-a1b5-8e9072df760b",
            "86004125-ae0a-448f-a69b-3a16b961544c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}