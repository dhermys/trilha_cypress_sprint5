{
  "stats": {
    "suites": 3,
    "tests": 11,
    "passes": 10,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-10T00:54:48.659Z",
    "end": "2022-09-10T00:55:13.871Z",
    "duration": 7423,
    "testsRegistered": 11,
    "passPercent": 90.9090909090909,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7b942a24-f4e6-4b65-a8ec-4eeab8319ff4",
      "title": "",
      "fullFile": "cypress/integration/2.login.spec.js",
      "file": "cypress/integration/2.login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bcd99566-5d3d-43d6-8088-07beb78b51ba",
          "title": "Casos de teste sobre a rota /login da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  console.log(cy.get('@usuarioLogin'));\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "589fcc8a-8818-4339-9d8f-0918d6a877a4",
              "parentUUID": "bcd99566-5d3d-43d6-8088-07beb78b51ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login sem sucesso",
              "fullTitle": "Casos de teste sobre a rota /login da API Serverest Deve realizar login sem sucesso",
              "timedOut": null,
              "duration": 856,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarUsuarioFalso().then(res => {\n  cy.contractValidation(res, '1.login', 400);\n  _validaServerest.default.validarLoginSemSucesso(res);\n});",
              "err": {
                "message": "AssertionError: expected 401 to equal 400",
                "estack": "AssertionError: expected 401 to equal 400\n    at Function.validarLoginSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:340:32)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\2.login.spec.js:189:32)",
                "diff": "- 401\n+ 400\n"
              },
              "uuid": "ab4b98c7-8563-4e91-b757-e226ad1952bc",
              "parentUUID": "bcd99566-5d3d-43d6-8088-07beb78b51ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "589fcc8a-8818-4339-9d8f-0918d6a877a4"
          ],
          "failures": [
            "ab4b98c7-8563-4e91-b757-e226ad1952bc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7673f846-d267-48f3-a207-b811962a0e05",
      "title": "",
      "fullFile": "cypress/integration/3.produtos.spec.js",
      "file": "cypress/integration/3.produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b952d897-01e2-415f-b18c-af92f7e3d182",
          "title": "Casos de teste sobre a rota /produtos da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os produtos cadastrados",
              "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Deve buscar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 396,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(res => {\n  _validaServerest.default.validarBuscaDeProdutos(res);\n});",
              "err": {},
              "uuid": "36dc9746-2254-4ccf-a737-252cff64c94a",
              "parentUUID": "b952d897-01e2-415f-b18c-af92f7e3d182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a94c3d94-565d-47a8-b4e4-3825713f04f5",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve postar um novo produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve postar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 830,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(res => {\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "1abb742d-0948-4419-aa4f-2e6152001f95",
                  "parentUUID": "a94c3d94-565d-47a8-b4e4-3825713f04f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve alterar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve alterar um produto com sucesso",
                  "timedOut": null,
                  "duration": 859,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.alterarProdutoCadastrado().then(res => {\n  cy.contractValidation(res, '11.put-produtos-by-id', 200);\n  _validaServerest.default.validarAlteracaoDeProdutoComSucesso(res);\n});",
                  "err": {},
                  "uuid": "8dae3b4d-5bc8-44b5-8d68-b0d12ba63383",
                  "parentUUID": "a94c3d94-565d-47a8-b4e4-3825713f04f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve deletar um produto com sucesso",
                  "fullTitle": "Casos de teste sobre a rota /produtos da API Serverest Logar com sucesso Deve deletar um produto com sucesso",
                  "timedOut": null,
                  "duration": 852,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.deletarProdutoCadastrado().then(res => {\n  cy.log(res);\n});",
                  "err": {},
                  "uuid": "0920b7c0-3760-4fee-8f81-1ef5d7f75602",
                  "parentUUID": "a94c3d94-565d-47a8-b4e4-3825713f04f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1abb742d-0948-4419-aa4f-2e6152001f95",
                "8dae3b4d-5bc8-44b5-8d68-b0d12ba63383",
                "0920b7c0-3760-4fee-8f81-1ef5d7f75602"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2541,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "36dc9746-2254-4ccf-a737-252cff64c94a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cdadf010-94f1-4474-879c-6a3963622d58",
      "title": "",
      "fullFile": "cypress/integration/1.usuarios.spec.js",
      "file": "cypress/integration/1.usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
          "title": "Casos de teste sobre a rota /usuarios da API Serverest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 916,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  cy.contractValidation(res, '2.get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "85b5db81-f3dc-4e63-84d2-9d18aec97034",
              "parentUUID": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve postar um novo usuário admnistrador existente",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Não deve postar um novo usuário admnistrador existente",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postarUsuarioSemSucesso().then(res => {\n  cy.contractValidation(res, '4.post-usuarios', 400);\n  expect(res.body.message).to.be.eq('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "902e8883-78ec-486e-82dd-0b7e59efb3a1",
              "parentUUID": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve realizar login com sucesso",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve realizar login com sucesso",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "7af5bafb-ebbf-4360-acff-11868ef2cffa",
              "parentUUID": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar e salvar um usuário em um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar e salvar um usuário em um arquivo json",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(res => {\n  let limite = res.body.quantidade - 1;\n  cy.log(limite);\n  let inteiro = _factory.default.gerarInteiroAleatorio(limite);\n  cy.writeFile('./cypress/fixtures/usuario.json', res.body.usuarios[inteiro]);\n  _validaServerest.default.validarBuscaDeUsuarios(res);\n});",
              "err": {},
              "uuid": "30865f32-f3ce-4aeb-818e-9dc80a680a8a",
              "parentUUID": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar o usuario de um arquivo json",
              "fullTitle": "Casos de teste sobre a rota /usuarios da API Serverest Deve buscar o usuario de um arquivo json",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usuario.json').then(json => {\n  let usuario = {\n    email: json.email,\n    password: json.password\n  };\n  _serverest.default.logar(usuario).then(res => {\n    _validaServerest.default.validarLoginComSucesso(res);\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "f02ebba5-2819-4724-a50e-6690d88253bd",
              "parentUUID": "30eab696-0f8c-41cb-a924-31d0323ce6c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85b5db81-f3dc-4e63-84d2-9d18aec97034",
            "902e8883-78ec-486e-82dd-0b7e59efb3a1",
            "7af5bafb-ebbf-4360-acff-11868ef2cffa",
            "30865f32-f3ce-4aeb-818e-9dc80a680a8a",
            "f02ebba5-2819-4724-a50e-6690d88253bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}